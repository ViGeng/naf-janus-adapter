{"version":3,"file":"naf-janus-adapter.min.js","mappings":"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","sources":["webpack://@networked-aframe/naf-janus-adapter/./node_modules/@networked-aframe/minijanus/minijanus.js","webpack://@networked-aframe/naf-janus-adapter/./src/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/browser.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/debug/src/common.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/ms/index.js","webpack://@networked-aframe/naf-janus-adapter/./node_modules/sdp/sdp.js","webpack://@networked-aframe/naf-janus-adapter/webpack/bootstrap","webpack://@networked-aframe/naf-janus-adapter/webpack/startup"],"sourcesContent":["/**\n * Represents a handle to a single Janus plugin on a Janus session. Each WebRTC connection to the Janus server will be\n * associated with a single handle. Once attached to the server, this handle will be given a unique ID which should be\n * used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#handles.\n **/\nfunction JanusPluginHandle(session) {\n  this.session = session;\n  this.id = undefined;\n}\n\n/** Attaches this handle to the Janus server and sets its ID. **/\nJanusPluginHandle.prototype.attach = function(plugin, loop_index) {\n  var payload = { plugin: plugin, loop_index: loop_index, \"force-bundle\": true, \"force-rtcp-mux\": true };\n  return this.session.send(\"attach\", payload).then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/** Detaches this handle. **/\nJanusPluginHandle.prototype.detach = function() {\n  return this.send(\"detach\");\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this plugin handle with the\n * `janus` attribute equal to `ev`.\n **/\nJanusPluginHandle.prototype.on = function(ev, callback) {\n  return this.session.on(ev, signal => {\n    if (signal.sender == this.id) {\n      callback(signal);\n    }\n  });\n};\n\n/**\n * Sends a signal associated with this handle. Signals should be JSON-serializable objects. Returns a promise that will\n * be resolved or rejected when a response to this signal is received, or when no response is received within the\n * session timeout.\n **/\nJanusPluginHandle.prototype.send = function(type, signal) {\n  return this.session.send(type, Object.assign({ handle_id: this.id }, signal));\n};\n\n/** Sends a plugin-specific message associated with this handle. **/\nJanusPluginHandle.prototype.sendMessage = function(body) {\n  return this.send(\"message\", { body: body });\n};\n\n/** Sends a JSEP offer or answer associated with this handle. **/\nJanusPluginHandle.prototype.sendJsep = function(jsep) {\n  return this.send(\"message\", { body: {}, jsep: jsep });\n};\n\n/** Sends an ICE trickle candidate associated with this handle. **/\nJanusPluginHandle.prototype.sendTrickle = function(candidate) {\n  return this.send(\"trickle\", { candidate: candidate });\n};\n\n/**\n * Represents a Janus session -- a Janus context from within which you can open multiple handles and connections. Once\n * created, this session will be given a unique ID which should be used to associate it with future signalling messages.\n *\n * See https://janus.conf.meetecho.com/docs/rest.html#sessions.\n **/\nfunction JanusSession(output, options) {\n  this.output = output;\n  this.id = undefined;\n  this.nextTxId = 0;\n  this.txns = {};\n  this.eventHandlers = {};\n  this.options = Object.assign({\n    verbose: false,\n    timeoutMs: 10000,\n    keepaliveMs: 30000\n  }, options);\n}\n\n/** Creates this session on the Janus server and sets its ID. **/\nJanusSession.prototype.create = function() {\n  return this.send(\"create\").then(resp => {\n    this.id = resp.data.id;\n    return resp;\n  });\n};\n\n/**\n * Destroys this session. Note that upon destruction, Janus will also close the signalling transport (if applicable) and\n * any open WebRTC connections.\n **/\nJanusSession.prototype.destroy = function() {\n  return this.send(\"destroy\").then((resp) => {\n    this.dispose();\n    return resp;\n  });\n};\n\n/**\n * Disposes of this session in a way such that no further incoming signalling messages will be processed.\n * Outstanding transactions will be rejected.\n **/\nJanusSession.prototype.dispose = function() {\n  this._killKeepalive();\n  this.eventHandlers = {};\n  for (var txId in this.txns) {\n    if (this.txns.hasOwnProperty(txId)) {\n      var txn = this.txns[txId];\n      clearTimeout(txn.timeout);\n      txn.reject(new Error(\"Janus session was disposed.\"));\n      delete this.txns[txId];\n    }\n  }\n};\n\n/**\n * Whether this signal represents an error, and the associated promise (if any) should be rejected.\n * Users should override this to handle any custom plugin-specific error conventions.\n **/\nJanusSession.prototype.isError = function(signal) {\n  return signal.janus === \"error\";\n};\n\n/** Registers a callback to be fired upon the reception of any incoming Janus signals for this session with the\n * `janus` attribute equal to `ev`.\n **/\nJanusSession.prototype.on = function(ev, callback) {\n  var handlers = this.eventHandlers[ev];\n  if (handlers == null) {\n    handlers = this.eventHandlers[ev] = [];\n  }\n  handlers.push(callback);\n};\n\n/**\n * Callback for receiving JSON signalling messages pertinent to this session. If the signals are responses to previously\n * sent signals, the promises for the outgoing signals will be resolved or rejected appropriately with this signal as an\n * argument.\n *\n * External callers should call this function every time a new signal arrives on the transport; for example, in a\n * WebSocket's `message` event, or when a new datum shows up in an HTTP long-polling response.\n **/\nJanusSession.prototype.receive = function(signal) {\n  if (this.options.verbose) {\n    this._logIncoming(signal);\n  }\n  if (signal.session_id != this.id) {\n    console.warn(\"Incorrect session ID received in Janus signalling message: was \" + signal.session_id + \", expected \" + this.id + \".\");\n  }\n\n  var responseType = signal.janus;\n  var handlers = this.eventHandlers[responseType];\n  if (handlers != null) {\n    for (var i = 0; i < handlers.length; i++) {\n      handlers[i](signal);\n    }\n  }\n\n  if (signal.transaction != null) {\n    var txn = this.txns[signal.transaction];\n    if (txn == null) {\n      // this is a response to a transaction that wasn't caused via JanusSession.send, or a plugin replied twice to a\n      // single request, or the session was disposed, or something else that isn't under our purview; that's fine\n      return;\n    }\n\n    if (responseType === \"ack\" && txn.type == \"message\") {\n      // this is an ack of an asynchronously-processed plugin request, we should wait to resolve the promise until the\n      // actual response comes in\n      return;\n    }\n\n    clearTimeout(txn.timeout);\n\n    delete this.txns[signal.transaction];\n    (this.isError(signal) ? txn.reject : txn.resolve)(signal);\n  }\n};\n\n/**\n * Sends a signal associated with this session, beginning a new transaction. Returns a promise that will be resolved or\n * rejected when a response is received in the same transaction, or when no response is received within the session\n * timeout.\n **/\nJanusSession.prototype.send = function(type, signal) {\n  signal = Object.assign({ transaction: (this.nextTxId++).toString() }, signal);\n  return new Promise((resolve, reject) => {\n    var timeout = null;\n    if (this.options.timeoutMs) {\n      timeout = setTimeout(() => {\n        delete this.txns[signal.transaction];\n        reject(new Error(\"Signalling transaction with txid \" + signal.transaction + \" timed out.\"));\n      }, this.options.timeoutMs);\n    }\n    this.txns[signal.transaction] = { resolve: resolve, reject: reject, timeout: timeout, type: type };\n    this._transmit(type, signal);\n  });\n};\n\nJanusSession.prototype._transmit = function(type, signal) {\n  signal = Object.assign({ janus: type }, signal);\n\n  if (this.id != null) { // this.id is undefined in the special case when we're sending the session create message\n    signal = Object.assign({ session_id: this.id }, signal);\n  }\n\n  if (this.options.verbose) {\n    this._logOutgoing(signal);\n  }\n\n  this.output(JSON.stringify(signal));\n  this._resetKeepalive();\n};\n\nJanusSession.prototype._logOutgoing = function(signal) {\n  var kind = signal.janus;\n  if (kind === \"message\" && signal.jsep) {\n    kind = signal.jsep.type;\n  }\n  var message = \"> Outgoing Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \";\n  console.debug(\"%c\" + message, \"color: #040\", signal);\n};\n\nJanusSession.prototype._logIncoming = function(signal) {\n  var kind = signal.janus;\n  var message = signal.transaction ?\n      \"< Incoming Janus \" + (kind || \"signal\") + \" (#\" + signal.transaction + \"): \" :\n      \"< Incoming Janus \" + (kind || \"signal\") + \": \";\n  console.debug(\"%c\" + message, \"color: #004\", signal);\n};\n\nJanusSession.prototype._sendKeepalive = function() {\n  return this.send(\"keepalive\");\n};\n\nJanusSession.prototype._killKeepalive = function() {\n  clearTimeout(this.keepaliveTimeout);\n};\n\nJanusSession.prototype._resetKeepalive = function() {\n  this._killKeepalive();\n  if (this.options.keepaliveMs) {\n    this.keepaliveTimeout = setTimeout(() => {\n      this._sendKeepalive().catch(e => console.error(\"Error received from keepalive: \", e));\n    }, this.options.keepaliveMs);\n  }\n};\n\nmodule.exports = {\n  JanusPluginHandle,\n  JanusSession\n};\n","/* global NAF */\nvar mj = require(\"@networked-aframe/minijanus\");\nmj.JanusSession.prototype.sendOriginal = mj.JanusSession.prototype.send;\nmj.JanusSession.prototype.send = function(type, signal) {\n  return this.sendOriginal(type, signal).catch((e) => {\n    if (e.message && e.message.indexOf(\"timed out\") > -1) {\n      console.error(\"web socket timed out\");\n      NAF.connection.adapter.reconnect();\n    } else {\n      throw(e);\n    }\n  });\n}\n\nvar sdpUtils = require(\"sdp\");\nvar debug = require(\"debug\")(\"naf-janus-adapter:debug\");\nvar warn = require(\"debug\")(\"naf-janus-adapter:warn\");\nvar error = require(\"debug\")(\"naf-janus-adapter:error\");\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nconst SUBSCRIBE_TIMEOUT_MS = 15000;\n\nconst AVAILABLE_OCCUPANTS_THRESHOLD = 5;\nconst MAX_SUBSCRIBE_DELAY = 5000;\n\nfunction randomDelay(min, max) {\n  return new Promise(resolve => {\n    const delay = Math.random() * (max - min) + min;\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction debounce(fn) {\n  var curr = Promise.resolve();\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    curr = curr.then(_ => fn.apply(this, args));\n  };\n}\n\nfunction randomUint() {\n  return Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n}\n\nfunction untilDataChannelOpen(dataChannel) {\n  return new Promise((resolve, reject) => {\n    if (dataChannel.readyState === \"open\") {\n      resolve();\n    } else {\n      let resolver, rejector;\n\n      const clear = () => {\n        dataChannel.removeEventListener(\"open\", resolver);\n        dataChannel.removeEventListener(\"error\", rejector);\n      };\n\n      resolver = () => {\n        clear();\n        resolve();\n      };\n      rejector = () => {\n        clear();\n        reject();\n      };\n\n      dataChannel.addEventListener(\"open\", resolver);\n      dataChannel.addEventListener(\"error\", rejector);\n    }\n  });\n}\n\nconst isH264VideoSupported = (() => {\n  const video = document.createElement(\"video\");\n  return video.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"') !== \"\";\n})();\n\nconst OPUS_PARAMETERS = {\n  // indicates that we want to enable DTX to elide silence packets\n  usedtx: 1,\n  // indicates that we prefer to receive mono audio (important for voip profile)\n  stereo: 0,\n  // indicates that we prefer to send mono audio (important for voip profile)\n  \"sprop-stereo\": 0\n};\n\nconst DEFAULT_PEER_CONNECTION_CONFIG = {\n  iceServers: [{ urls: \"stun:stun1.l.google.com:19302\" }, { urls: \"stun:stun2.l.google.com:19302\" }]\n};\n\nconst WS_NORMAL_CLOSURE = 1000;\n\nclass JanusAdapter {\n  constructor() {\n    this.room = null;\n    // We expect the consumer to set a client id before connecting.\n    this.clientId = null;\n    this.joinToken = null;\n\n    this.serverUrl = null;\n    this.webRtcOptions = {};\n    this.peerConnectionConfig = null;\n    this.ws = null;\n    this.session = null;\n    this.reliableTransport = \"datachannel\";\n    this.unreliableTransport = \"datachannel\";\n\n    // In the event the server restarts and all clients lose connection, reconnect with\n    // some random jitter added to prevent simultaneous reconnection requests.\n    this.initialReconnectionDelay = 1000 * Math.random();\n    this.reconnectionDelay = this.initialReconnectionDelay;\n    this.reconnectionTimeout = null;\n    this.maxReconnectionAttempts = 10;\n    this.reconnectionAttempts = 0;\n\n    this.publisher = null;\n    this.occupantIds = [];\n    this.occupants = {};\n    this.mediaStreams = {};\n    this.localMediaStream = null;\n    this.pendingMediaRequests = new Map();\n\n    this.pendingOccupants = new Set();\n    this.availableOccupants = [];\n    this.requestedOccupants = null;\n\n    this.blockedClients = new Map();\n    this.frozenUpdates = new Map();\n\n    this.timeOffsets = [];\n    this.serverTimeRequests = 0;\n    this.avgTimeOffset = 0;\n\n    this.onWebsocketOpen = this.onWebsocketOpen.bind(this);\n    this.onWebsocketClose = this.onWebsocketClose.bind(this);\n    this.onWebsocketMessage = this.onWebsocketMessage.bind(this);\n    this.onDataChannelMessage = this.onDataChannelMessage.bind(this);\n    this.onData = this.onData.bind(this);\n  }\n\n  setServerUrl(url) {\n    this.serverUrl = url;\n  }\n\n  setApp(app) {}\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setJoinToken(joinToken) {\n    this.joinToken = joinToken;\n  }\n\n  setClientId(clientId) {\n    this.clientId = clientId;\n  }\n\n  setWebRtcOptions(options) {\n    this.webRtcOptions = options;\n  }\n\n  setPeerConnectionConfig(peerConnectionConfig) {\n    this.peerConnectionConfig = peerConnectionConfig;\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.onOccupantsChanged = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.onOccupantConnected = openListener;\n    this.onOccupantDisconnected = closedListener;\n    this.onOccupantMessage = messageListener;\n  }\n\n  setReconnectionListeners(reconnectingListener, reconnectedListener, reconnectionErrorListener) {\n    // onReconnecting is called with the number of milliseconds until the next reconnection attempt\n    this.onReconnecting = reconnectingListener;\n    // onReconnected is called when the connection has been reestablished\n    this.onReconnected = reconnectedListener;\n    // onReconnectionError is called with an error when maxReconnectionAttempts has been reached\n    this.onReconnectionError = reconnectionErrorListener;\n  }\n\n  setEventLoops(loops) {\n    this.loops = loops;\n  }\n\n  connect() {\n    debug(`connecting to ${this.serverUrl}`);\n\n    const websocketConnection = new Promise((resolve, reject) => {\n      this.ws = new WebSocket(this.serverUrl, \"janus-protocol\");\n\n      this.session = new mj.JanusSession(this.ws.send.bind(this.ws), { timeoutMs: 40000 });\n\n      this.ws.addEventListener(\"close\", this.onWebsocketClose);\n      this.ws.addEventListener(\"message\", this.onWebsocketMessage);\n\n      this.wsOnOpen = () => {\n        this.ws.removeEventListener(\"open\", this.wsOnOpen);\n        this.onWebsocketOpen()\n          .then(resolve)\n          .catch(reject);\n      };\n\n      this.ws.addEventListener(\"open\", this.wsOnOpen);\n    });\n\n    return Promise.all([websocketConnection, this.updateTimeOffset()]);\n  }\n\n  disconnect() {\n    debug(`disconnecting`);\n\n    clearTimeout(this.reconnectionTimeout);\n\n    this.removeAllOccupants();\n\n    if (this.publisher) {\n      // Close the publisher peer connection. Which also detaches the plugin handle.\n      this.publisher.conn.close();\n      this.publisher = null;\n    }\n\n    if (this.session) {\n      this.session.dispose();\n      this.session = null;\n    }\n\n    if (this.ws) {\n      this.ws.removeEventListener(\"open\", this.wsOnOpen);\n      this.ws.removeEventListener(\"close\", this.onWebsocketClose);\n      this.ws.removeEventListener(\"message\", this.onWebsocketMessage);\n      this.ws.close();\n      this.ws = null;\n    }\n\n    // Now that all RTCPeerConnection closed, be sure to not call\n    // reconnect() again via performDelayedReconnect if previous\n    // RTCPeerConnection was in the failed state.\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n      this.delayedReconnectTimeout = null;\n    }\n  }\n\n  isDisconnected() {\n    return this.ws === null;\n  }\n\n  async onWebsocketOpen() {\n    // Create the Janus Session\n    await this.session.create();\n\n    // Attach the SFU Plugin and create a RTCPeerConnection for the publisher.\n    // The publisher sends audio and opens two bidirectional data channels.\n    // One reliable datachannel and one unreliable.\n    this.publisher = await this.createPublisher();\n\n    // Call the naf connectSuccess callback before we start receiving WebRTC messages.\n    this.connectSuccess(this.clientId);\n\n    for (let i = 0; i < this.publisher.initialOccupants.length; i++) {\n      const occupantId = this.publisher.initialOccupants[i];\n      if (occupantId === this.clientId) continue; // Happens during non-graceful reconnects due to zombie sessions\n      this.addAvailableOccupant(occupantId);\n    }\n\n    this.syncOccupants();\n  }\n\n  onWebsocketClose(event) {\n    // The connection was closed successfully. Don't try to reconnect.\n    if (event.code === WS_NORMAL_CLOSURE) {\n      return;\n    }\n\n    console.warn(\"Janus websocket closed unexpectedly.\");\n    if (this.onReconnecting) {\n      this.onReconnecting(this.reconnectionDelay);\n    }\n\n    this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n  }\n\n  reconnect() {\n    // Dispose of all networked entities and other resources tied to the session.\n    this.disconnect();\n\n    this.connect()\n      .then(() => {\n        this.reconnectionDelay = this.initialReconnectionDelay;\n        this.reconnectionAttempts = 0;\n\n        if (this.onReconnected) {\n          this.onReconnected();\n        }\n      })\n      .catch(error => {\n        this.reconnectionDelay += 1000;\n        this.reconnectionAttempts++;\n\n        if (this.reconnectionAttempts > this.maxReconnectionAttempts && this.onReconnectionError) {\n          return this.onReconnectionError(\n            new Error(\"Connection could not be reestablished, exceeded maximum number of reconnection attempts.\")\n          );\n        }\n\n        console.warn(\"Error during reconnect, retrying.\");\n        console.warn(error);\n\n        if (this.onReconnecting) {\n          this.onReconnecting(this.reconnectionDelay);\n        }\n\n        this.reconnectionTimeout = setTimeout(() => this.reconnect(), this.reconnectionDelay);\n      });\n  }\n\n  performDelayedReconnect() {\n    if (this.delayedReconnectTimeout) {\n      clearTimeout(this.delayedReconnectTimeout);\n    }\n\n    this.delayedReconnectTimeout = setTimeout(() => {\n      this.delayedReconnectTimeout = null;\n      this.reconnect();\n    }, 10000);\n  }\n\n  onWebsocketMessage(event) {\n    this.session.receive(JSON.parse(event.data));\n  }\n\n  addAvailableOccupant(occupantId) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      this.availableOccupants.push(occupantId);\n    }\n  }\n\n  removeAvailableOccupant(occupantId) {\n    const idx = this.availableOccupants.indexOf(occupantId);\n    if (idx !== -1) {\n      this.availableOccupants.splice(idx, 1);\n    }\n  }\n\n  syncOccupants(requestedOccupants) {\n    if (requestedOccupants) {\n      this.requestedOccupants = requestedOccupants;\n    }\n\n    if (!this.requestedOccupants) {\n      return;\n    }\n\n    // Add any requested, available, and non-pending occupants.\n    for (let i = 0; i < this.requestedOccupants.length; i++) {\n      const occupantId = this.requestedOccupants[i];\n      if (!this.occupants[occupantId] && this.availableOccupants.indexOf(occupantId) !== -1 && !this.pendingOccupants.has(occupantId)) {\n        this.addOccupant(occupantId);\n      }\n    }\n\n    // Remove any unrequested and currently added occupants.\n    for (let j = 0; j < this.availableOccupants.length; j++) {\n      const occupantId = this.availableOccupants[j];\n      if (this.occupants[occupantId] && this.requestedOccupants.indexOf(occupantId) === -1) {\n        this.removeOccupant(occupantId);\n      }\n    }\n\n    // Call the Networked AFrame callbacks for the updated occupants list.\n    this.onOccupantsChanged(this.occupants);\n  }\n\n  async addOccupant(occupantId) {\n    this.pendingOccupants.add(occupantId);\n    \n    const availableOccupantsCount = this.availableOccupants.length;\n    if (availableOccupantsCount > AVAILABLE_OCCUPANTS_THRESHOLD) {\n      await randomDelay(0, MAX_SUBSCRIBE_DELAY);\n    }\n  \n    const subscriber = await this.createSubscriber(occupantId);\n    if (subscriber) {\n      if(!this.pendingOccupants.has(occupantId)) {\n        subscriber.conn.close();\n      } else {\n        this.pendingOccupants.delete(occupantId);\n        this.occupantIds.push(occupantId);\n        this.occupants[occupantId] = subscriber;\n\n        this.setMediaStream(occupantId, subscriber.mediaStream);\n\n        // Call the Networked AFrame callbacks for the new occupant.\n        this.onOccupantConnected(occupantId);\n      }\n    }\n  }\n\n  removeAllOccupants() {\n    this.pendingOccupants.clear();\n    for (let i = this.occupantIds.length - 1; i >= 0; i--) {\n      this.removeOccupant(this.occupantIds[i]);\n    }\n  }\n\n  removeOccupant(occupantId) {\n    this.pendingOccupants.delete(occupantId);\n    \n    if (this.occupants[occupantId]) {\n      // Close the subscriber peer connection. Which also detaches the plugin handle.\n      this.occupants[occupantId].conn.close();\n      delete this.occupants[occupantId];\n      \n      this.occupantIds.splice(this.occupantIds.indexOf(occupantId), 1);\n    }\n\n    if (this.mediaStreams[occupantId]) {\n      delete this.mediaStreams[occupantId];\n    }\n\n    if (this.pendingMediaRequests.has(occupantId)) {\n      const msg = \"The user disconnected before the media stream was resolved.\";\n      this.pendingMediaRequests.get(occupantId).audio.reject(msg);\n      this.pendingMediaRequests.get(occupantId).video.reject(msg);\n      this.pendingMediaRequests.delete(occupantId);\n    }\n\n    // Call the Networked AFrame callbacks for the removed occupant.\n    this.onOccupantDisconnected(occupantId);\n  }\n\n  associate(conn, handle) {\n    conn.addEventListener(\"icecandidate\", ev => {\n      handle.sendTrickle(ev.candidate || null).catch(e => error(\"Error trickling ICE: %o\", e));\n    });\n    conn.addEventListener(\"iceconnectionstatechange\", ev => {\n      if (conn.iceConnectionState === \"connected\") {\n        console.log(\"ICE state changed to connected\");\n      }\n      if (conn.iceConnectionState === \"disconnected\") {\n        console.warn(\"ICE state changed to disconnected\");\n      }\n      if (conn.iceConnectionState === \"failed\") {\n        console.warn(\"ICE failure detected. Reconnecting in 10s.\");\n        this.performDelayedReconnect();\n      }\n    })\n\n    // we have to debounce these because janus gets angry if you send it a new SDP before\n    // it's finished processing an existing SDP. in actuality, it seems like this is maybe\n    // too liberal and we need to wait some amount of time after an offer before sending another,\n    // but we don't currently know any good way of detecting exactly how long :(\n    conn.addEventListener(\n      \"negotiationneeded\",\n      debounce(ev => {\n        debug(\"Sending new offer for handle: %o\", handle);\n        var offer = conn.createOffer().then(this.configurePublisherSdp).then(this.fixSafariIceUFrag);\n        var local = offer.then(o => conn.setLocalDescription(o));\n        var remote = offer;\n\n        remote = remote\n          .then(this.fixSafariIceUFrag)\n          .then(j => handle.sendJsep(j))\n          .then(r => conn.setRemoteDescription(r.jsep));\n        return Promise.all([local, remote]).catch(e => error(\"Error negotiating offer: %o\", e));\n      })\n    );\n    handle.on(\n      \"event\",\n      debounce(ev => {\n        var jsep = ev.jsep;\n        if (jsep && jsep.type == \"offer\") {\n          debug(\"Accepting new offer for handle: %o\", handle);\n          var answer = conn\n            .setRemoteDescription(this.configureSubscriberSdp(jsep))\n            .then(_ => conn.createAnswer())\n            .then(this.fixSafariIceUFrag);\n          var local = answer.then(a => conn.setLocalDescription(a));\n          var remote = answer.then(j => handle.sendJsep(j));\n          return Promise.all([local, remote]).catch(e => error(\"Error negotiating answer: %o\", e));\n        } else {\n          // some other kind of event, nothing to do\n          return null;\n        }\n      })\n    );\n  }\n\n  async createPublisher() {\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(\"pub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops && this.clientId ? parseInt(this.clientId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(\"pub waiting for data channels & webrtcup\");\n    var webrtcup = new Promise(resolve => handle.on(\"webrtcup\", resolve));\n\n    // Unreliable datachannel: sending and receiving component updates.\n    // Reliable datachannel: sending and recieving entity instantiations.\n    var reliableChannel = conn.createDataChannel(\"reliable\", { ordered: true });\n    var unreliableChannel = conn.createDataChannel(\"unreliable\", {\n      ordered: false,\n      maxRetransmits: 0\n    });\n\n    reliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-reliable\"));\n    unreliableChannel.addEventListener(\"message\", e => this.onDataChannelMessage(e, \"janus-unreliable\"));\n\n    await webrtcup;\n    await untilDataChannelOpen(reliableChannel);\n    await untilDataChannelOpen(unreliableChannel);\n\n    // doing this here is sort of a hack around chrome renegotiation weirdness --\n    // if we do it prior to webrtcup, chrome on gear VR will sometimes put a\n    // renegotiation offer in flight while the first offer was still being\n    // processed by janus. we should find some more principled way to figure out\n    // when janus is done in the future.\n    if (this.localMediaStream) {\n      this.localMediaStream.getTracks().forEach(track => {\n        conn.addTrack(track, this.localMediaStream);\n      });\n    }\n\n    // Handle all of the join and leave events.\n    handle.on(\"event\", ev => {\n      var data = ev.plugindata.data;\n      if (data.event == \"join\" && data.room_id == this.room) {\n        if (this.delayedReconnectTimeout) {\n          // Don't create a new RTCPeerConnection, all RTCPeerConnection will be closed in less than 10s.\n          return;\n        }\n        this.addAvailableOccupant(data.user_id);\n        this.syncOccupants();\n      } else if (data.event == \"leave\" && data.room_id == this.room) {\n        this.removeAvailableOccupant(data.user_id);\n        this.removeOccupant(data.user_id);\n      } else if (data.event == \"blocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: data.by } }));\n      } else if (data.event == \"unblocked\") {\n        document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: data.by } }));\n      } else if (data.event === \"data\") {\n        this.onData(JSON.parse(data.body), \"janus-event\");\n      }\n    });\n\n    debug(\"pub waiting for join\");\n\n    // Send join message to janus. Listen for join/leave messages. Automatically subscribe to all users' WebRTC data.\n    var message = await this.sendJoin(handle, {\n      notifications: true,\n      data: true\n    });\n\n    if (!message.plugindata.data.success) {\n      const err = message.plugindata.data.error;\n      console.error(err);\n      // We may get here because of an expired JWT.\n      // Close the connection ourself otherwise janus will close it after\n      // session_timeout because we didn't send any keepalive and this will\n      // trigger a delayed reconnect because of the iceconnectionstatechange\n      // listener for failure state.\n      // Even if the app code calls disconnect in case of error, disconnect\n      // won't close the peer connection because this.publisher is not set.\n      conn.close();\n      throw err;\n    }\n\n    var initialOccupants = message.plugindata.data.response.users[this.room] || [];\n\n    if (initialOccupants.includes(this.clientId)) {\n      console.warn(\"Janus still has previous session for this client. Reconnecting in 10s.\");\n      this.performDelayedReconnect();\n    }\n\n    debug(\"publisher ready\");\n    return {\n      handle,\n      initialOccupants,\n      reliableChannel,\n      unreliableChannel,\n      conn\n    };\n  }\n\n  configurePublisherSdp(jsep) {\n    jsep.sdp = jsep.sdp.replace(/a=fmtp:(109|111).*\\r\\n/g, (line, pt) => {\n      const parameters = Object.assign(sdpUtils.parseFmtp(line), OPUS_PARAMETERS);\n      return sdpUtils.writeFmtp({ payloadType: pt, parameters: parameters });\n    });\n    return jsep;\n  }\n\n  configureSubscriberSdp(jsep) {\n    // todo: consider cleaning up these hacks to use sdputils\n    if (!isH264VideoSupported) {\n      if (navigator.userAgent.indexOf(\"HeadlessChrome\") !== -1) {\n        // HeadlessChrome (e.g. puppeteer) doesn't support webrtc video streams, so we remove those lines from the SDP.\n        jsep.sdp = jsep.sdp.replace(/m=video[^]*m=/, \"m=\");\n      }\n    }\n\n    // TODO: Hack to get video working on Chrome for Android. https://groups.google.com/forum/#!topic/mozilla.dev.media/Ye29vuMTpo8\n    if (navigator.userAgent.indexOf(\"Android\") === -1) {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\r\\n\"\n      );\n    } else {\n      jsep.sdp = jsep.sdp.replace(\n        \"a=rtcp-fb:107 goog-remb\\r\\n\",\n        \"a=rtcp-fb:107 goog-remb\\r\\na=rtcp-fb:107 transport-cc\\r\\na=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\r\\n\"\n      );\n    }\n    return jsep;\n  }\n\n  async fixSafariIceUFrag(jsep) {\n    // Safari produces a \\n instead of an \\r\\n for the ice-ufrag. See https://github.com/meetecho/janus-gateway/issues/1818\n    jsep.sdp = jsep.sdp.replace(/[^\\r]\\na=ice-ufrag/g, \"\\r\\na=ice-ufrag\");\n    return jsep\n  }\n\n  async createSubscriber(occupantId, maxRetries = 5) {\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      console.warn(occupantId + \": cancelled occupant connection, occupant left before subscription negotation.\");\n      return null;\n    }\n\n    var handle = new mj.JanusPluginHandle(this.session);\n    var conn = new RTCPeerConnection(this.peerConnectionConfig || DEFAULT_PEER_CONNECTION_CONFIG);\n\n    debug(occupantId + \": sub waiting for sfu\");\n    await handle.attach(\"janus.plugin.sfu\", this.loops ? parseInt(occupantId) % this.loops : undefined);\n\n    this.associate(conn, handle);\n\n    debug(occupantId + \": sub waiting for join\");\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after attach\");\n      return null;\n    }\n\n    let webrtcFailed = false;\n\n    const webrtcup = new Promise(resolve => {\n      const leftInterval = setInterval(() => {\n        if (this.availableOccupants.indexOf(occupantId) === -1) {\n          clearInterval(leftInterval);\n          resolve();\n        }\n      }, 1000);\n\n      const timeout = setTimeout(() => {\n        clearInterval(leftInterval);\n        webrtcFailed = true;\n        resolve();\n      }, SUBSCRIBE_TIMEOUT_MS);\n\n      handle.on(\"webrtcup\", () => {\n        clearTimeout(timeout);\n        clearInterval(leftInterval);\n        resolve();\n      });\n    });\n\n    // Send join message to janus. Don't listen for join/leave messages. Subscribe to the occupant's media.\n    // Janus should send us an offer for this occupant's media in response to this.\n    await this.sendJoin(handle, { media: occupantId });\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancelled occupant connection, occupant left after join\");\n      return null;\n    }\n\n    debug(occupantId + \": sub waiting for webrtcup\");\n    await webrtcup;\n\n    if (this.availableOccupants.indexOf(occupantId) === -1) {\n      conn.close();\n      console.warn(occupantId + \": cancel occupant connection, occupant left during or after webrtcup\");\n      return null;\n    }\n\n    if (webrtcFailed) {\n      conn.close();\n      if (maxRetries > 0) {\n        console.warn(occupantId + \": webrtc up timed out, retrying\");\n        return this.createSubscriber(occupantId, maxRetries - 1);\n      } else {\n        console.warn(occupantId + \": webrtc up timed out\");\n        return null;\n      }\n    }\n\n    if (isSafari && !this._iOSHackDelayedInitialPeer) {\n      // HACK: the first peer on Safari during page load can fail to work if we don't\n      // wait some time before continuing here. See: https://github.com/mozilla/hubs/pull/1692\n      await (new Promise((resolve) => setTimeout(resolve, 3000)));\n      this._iOSHackDelayedInitialPeer = true;\n    }\n\n    var mediaStream = new MediaStream();\n    var receivers = conn.getReceivers();\n    receivers.forEach(receiver => {\n      if (receiver.track) {\n        mediaStream.addTrack(receiver.track);\n      }\n    });\n    if (mediaStream.getTracks().length === 0) {\n      mediaStream = null;\n    }\n\n    debug(occupantId + \": subscriber ready\");\n    return {\n      handle,\n      mediaStream,\n      conn\n    };\n  }\n\n  sendJoin(handle, subscribe) {\n    return handle.sendMessage({\n      kind: \"join\",\n      room_id: this.room,\n      user_id: this.clientId,\n      subscribe,\n      token: this.joinToken\n    });\n  }\n\n  toggleFreeze() {\n    if (this.frozen) {\n      this.unfreeze();\n    } else {\n      this.freeze();\n    }\n  }\n\n  freeze() {\n    this.frozen = true;\n  }\n\n  unfreeze() {\n    this.frozen = false;\n    this.flushPendingUpdates();\n  }\n\n  dataForUpdateMultiMessage(networkId, message) {\n    // \"d\" is an array of entity datas, where each item in the array represents a unique entity and contains\n    // metadata for the entity, and an array of components that have been updated on the entity.\n    // This method finds the data corresponding to the given networkId.\n    for (let i = 0, l = message.data.d.length; i < l; i++) {\n      const data = message.data.d[i];\n\n      if (data.networkId === networkId) {\n        return data;\n      }\n    }\n\n    return null;\n  }\n\n  getPendingData(networkId, message) {\n    if (!message) return null;\n\n    let data = message.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, message) : message.data;\n\n    // Ignore messages relating to users who have disconnected since freezing, their entities\n    // will have aleady been removed by NAF.\n    // Note that delete messages have no \"owner\" so we have to check for that as well.\n    if (data.owner && !this.occupants[data.owner]) return null;\n\n    // Ignore messages from users that we may have blocked while frozen.\n    if (data.owner && this.blockedClients.has(data.owner)) return null;\n\n    return data\n  }\n\n  // Used externally\n  getPendingDataForNetworkId(networkId) {\n    return this.getPendingData(networkId, this.frozenUpdates.get(networkId));\n  }\n\n  flushPendingUpdates() {\n    for (const [networkId, message] of this.frozenUpdates) {\n      let data = this.getPendingData(networkId, message);\n      if (!data) continue;\n\n      // Override the data type on \"um\" messages types, since we extract entity updates from \"um\" messages into\n      // individual frozenUpdates in storeSingleMessage.\n      const dataType = message.dataType === \"um\" ? \"u\" : message.dataType;\n\n      this.onOccupantMessage(null, dataType, data, message.source);\n    }\n    this.frozenUpdates.clear();\n  }\n\n  storeMessage(message) {\n    if (message.dataType === \"um\") { // UpdateMulti\n      for (let i = 0, l = message.data.d.length; i < l; i++) {\n        this.storeSingleMessage(message, i);\n      }\n    } else {\n      this.storeSingleMessage(message);\n    }\n  }\n\n  storeSingleMessage(message, index) {\n    const data = index !== undefined ? message.data.d[index] : message.data;\n    const dataType = message.dataType;\n    const source = message.source;\n\n    const networkId = data.networkId;\n\n    if (!this.frozenUpdates.has(networkId)) {\n      this.frozenUpdates.set(networkId, message);\n    } else {\n      const storedMessage = this.frozenUpdates.get(networkId);\n      const storedData = storedMessage.dataType === \"um\" ? this.dataForUpdateMultiMessage(networkId, storedMessage) : storedMessage.data;\n\n      // Avoid updating components if the entity data received did not come from the current owner.\n      const isOutdatedMessage = data.lastOwnerTime < storedData.lastOwnerTime;\n      const isContemporaneousMessage = data.lastOwnerTime === storedData.lastOwnerTime;\n      if (isOutdatedMessage || (isContemporaneousMessage && storedData.owner > data.owner)) {\n        return;\n      }\n\n      if (dataType === \"r\") {\n        const createdWhileFrozen = storedData && storedData.isFirstSync;\n        if (createdWhileFrozen) {\n          // If the entity was created and deleted while frozen, don't bother conveying anything to the consumer.\n          this.frozenUpdates.delete(networkId);\n        } else {\n          // Delete messages override any other messages for this entity\n          this.frozenUpdates.set(networkId, message);\n        }\n      } else {\n        // merge in component updates\n        if (storedData.components && data.components) {\n          Object.assign(storedData.components, data.components);\n        }\n      }\n    }\n  }\n\n  onDataChannelMessage(e, source) {\n    this.onData(JSON.parse(e.data), source);\n  }\n\n  onData(message, source) {\n    if (debug.enabled) {\n      debug(`DC in: ${message}`);\n    }\n\n    if (!message.dataType) return;\n\n    message.source = source;\n\n    if (this.frozen) {\n      this.storeMessage(message);\n    } else {\n      this.onOccupantMessage(null, message.dataType, message.data, message.source);\n    }\n  }\n\n  shouldStartConnectionTo(client) {\n    return true;\n  }\n\n  startStreamConnection(client) {}\n\n  closeStreamConnection(client) {}\n\n  getConnectStatus(clientId) {\n    return this.occupants[clientId] ? NAF.adapters.IS_CONNECTED : NAF.adapters.NOT_CONNECTED;\n  }\n\n  async updateTimeOffset() {\n    if (this.isDisconnected()) return;\n\n    const clientSentTime = Date.now();\n\n    const res = await fetch(document.location.href, {\n      method: \"HEAD\",\n      cache: \"no-cache\"\n    });\n\n    const precision = 1000;\n    const serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + precision / 2;\n    const clientReceivedTime = Date.now();\n    const serverTime = serverReceivedTime + (clientReceivedTime - clientSentTime) / 2;\n    const timeOffset = serverTime - clientReceivedTime;\n\n    this.serverTimeRequests++;\n\n    if (this.serverTimeRequests <= 10) {\n      this.timeOffsets.push(timeOffset);\n    } else {\n      this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n    }\n\n    this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => (acc += offset), 0) / this.timeOffsets.length;\n\n    if (this.serverTimeRequests > 10) {\n      debug(`new server time offset: ${this.avgTimeOffset}ms`);\n      setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n    } else {\n      this.updateTimeOffset();\n    }\n  }\n\n  getServerTime() {\n    return Date.now() + this.avgTimeOffset;\n  }\n\n  getMediaStream(clientId, type = \"audio\") {\n    if (this.mediaStreams[clientId]) {\n      debug(`Already had ${type} for ${clientId}`);\n      return Promise.resolve(this.mediaStreams[clientId][type]);\n    } else {\n      debug(`Waiting on ${type} for ${clientId}`);\n      if (!this.pendingMediaRequests.has(clientId)) {\n        this.pendingMediaRequests.set(clientId, {});\n\n        const audioPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).audio = { resolve, reject };\n        });\n        const videoPromise = new Promise((resolve, reject) => {\n          this.pendingMediaRequests.get(clientId).video = { resolve, reject };\n        });\n\n        this.pendingMediaRequests.get(clientId).audio.promise = audioPromise;\n        this.pendingMediaRequests.get(clientId).video.promise = videoPromise;\n\n        audioPromise.catch(e => console.warn(`${clientId} getMediaStream Audio Error`, e));\n        videoPromise.catch(e => console.warn(`${clientId} getMediaStream Video Error`, e));\n      }\n      return this.pendingMediaRequests.get(clientId)[type].promise;\n    }\n  }\n\n  setMediaStream(clientId, stream) {\n    // Safari doesn't like it when you use single a mixed media stream where one of the tracks is inactive, so we\n    // split the tracks into two streams.\n    const audioStream = new MediaStream();\n    try {\n    stream.getAudioTracks().forEach(track => audioStream.addTrack(track));\n\n    } catch(e) {\n      console.warn(`${clientId} setMediaStream Audio Error`, e);\n    }\n    const videoStream = new MediaStream();\n    try {\n    stream.getVideoTracks().forEach(track => videoStream.addTrack(track));\n\n    } catch (e) {\n      console.warn(`${clientId} setMediaStream Video Error`, e);\n    }\n\n    this.mediaStreams[clientId] = { audio: audioStream, video: videoStream };\n\n    // Resolve the promise for the user's media stream if it exists.\n    if (this.pendingMediaRequests.has(clientId)) {\n      this.pendingMediaRequests.get(clientId).audio.resolve(audioStream);\n      this.pendingMediaRequests.get(clientId).video.resolve(videoStream);\n    }\n  }\n\n  async setLocalMediaStream(stream) {\n    // our job here is to make sure the connection winds up with RTP senders sending the stuff in this stream,\n    // and not the stuff that isn't in this stream. strategy is to replace existing tracks if we can, add tracks\n    // that we can't replace, and disable tracks that don't exist anymore.\n\n    // note that we don't ever remove a track from the stream -- since Janus doesn't support Unified Plan, we absolutely\n    // can't wind up with a SDP that has >1 audio or >1 video tracks, even if one of them is inactive (what you get if\n    // you remove a track from an existing stream.)\n    if (this.publisher && this.publisher.conn) {\n      const existingSenders = this.publisher.conn.getSenders();\n      const newSenders = [];\n      const tracks = stream.getTracks();\n\n      for (let i = 0; i < tracks.length; i++) {\n        const t = tracks[i];\n        const sender = existingSenders.find(s => s.track != null && s.track.kind == t.kind);\n\n        if (sender != null) {\n          if (sender.replaceTrack) {\n            await sender.replaceTrack(t);\n\n            // Workaround https://bugzilla.mozilla.org/show_bug.cgi?id=1576771\n            if (t.kind === \"video\" && t.enabled && navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n              t.enabled = false;\n              setTimeout(() => t.enabled = true, 1000);\n            }\n          } else {\n            // Fallback for browsers that don't support replaceTrack. At this time of this writing\n            // most browsers support it, and testing this code path seems to not work properly\n            // in Chrome anymore.\n            stream.removeTrack(sender.track);\n            stream.addTrack(t);\n          }\n          newSenders.push(sender);\n        } else {\n          newSenders.push(this.publisher.conn.addTrack(t, stream));\n        }\n      }\n      existingSenders.forEach(s => {\n        if (!newSenders.includes(s)) {\n          s.track.enabled = false;\n        }\n      });\n    }\n    this.localMediaStream = stream;\n    this.setMediaStream(this.clientId, stream);\n  }\n\n  enableMicrophone(enabled) {\n    if (this.publisher && this.publisher.conn) {\n      this.publisher.conn.getSenders().forEach(s => {\n        if (s.track.kind == \"audio\") {\n          s.track.enabled = enabled;\n        }\n      });\n    }\n  }\n\n  sendData(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          break;\n        case \"datachannel\":\n          this.publisher.unreliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          break;\n        default:\n          this.unreliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  sendDataGuaranteed(clientId, dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"sendDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }), whom: clientId });\n          break;\n        case \"datachannel\":\n          this.publisher.reliableChannel.send(JSON.stringify({ clientId, dataType, data }));\n          break;\n        default:\n          this.reliableTransport(clientId, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastData(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastData called without a publisher\");\n    } else {\n      switch (this.unreliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          break;\n        case \"datachannel\":\n          this.publisher.unreliableChannel.send(JSON.stringify({ dataType, data }));\n          break;\n        default:\n          this.unreliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    if (!this.publisher) {\n      console.warn(\"broadcastDataGuaranteed called without a publisher\");\n    } else {\n      switch (this.reliableTransport) {\n        case \"websocket\":\n          this.publisher.handle.sendMessage({ kind: \"data\", body: JSON.stringify({ dataType, data }) });\n          break;\n        case \"datachannel\":\n          this.publisher.reliableChannel.send(JSON.stringify({ dataType, data }));\n          break;\n        default:\n          this.reliableTransport(undefined, dataType, data);\n          break;\n      }\n    }\n  }\n\n  kick(clientId, permsToken) {\n    return this.publisher.handle.sendMessage({ kind: \"kick\", room_id: this.room, user_id: clientId, token: permsToken }).then(() => {\n      document.body.dispatchEvent(new CustomEvent(\"kicked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  block(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"block\", whom: clientId }).then(() => {\n      this.blockedClients.set(clientId, true);\n      document.body.dispatchEvent(new CustomEvent(\"blocked\", { detail: { clientId: clientId } }));\n    });\n  }\n\n  unblock(clientId) {\n    return this.publisher.handle.sendMessage({ kind: \"unblock\", whom: clientId }).then(() => {\n      this.blockedClients.delete(clientId);\n      document.body.dispatchEvent(new CustomEvent(\"unblocked\", { detail: { clientId: clientId } }));\n    });\n  }\n}\n\nNAF.adapters.register(\"janus\", JanusAdapter);\n\nmodule.exports = JanusAdapter;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["JanusPluginHandle","session","this","id","undefined","JanusSession","output","options","nextTxId","txns","eventHandlers","Object","assign","verbose","timeoutMs","keepaliveMs","prototype","attach","plugin","loop_index","payload","send","then","resp","data","detach","on","ev","callback","signal","sender","type","handle_id","sendMessage","body","sendJsep","jsep","sendTrickle","candidate","create","destroy","dispose","txId","_killKeepalive","hasOwnProperty","txn","clearTimeout","timeout","reject","Error","isError","janus","handlers","push","receive","_logIncoming","session_id","console","warn","responseType","i","length","transaction","resolve","toString","Promise","setTimeout","_transmit","_logOutgoing","JSON","stringify","_resetKeepalive","kind","message","debug","_sendKeepalive","keepaliveTimeout","catch","e","error","module","exports","_regeneratorRuntime","t","r","n","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","_next","_throw","key","info","_asyncToGenerator","fn","self","args","arguments","apply","err","_defineProperties","target","props","descriptor","_toPropertyKey","toPrimitive","String","_toPrimitive","mj","require","sendOriginal","indexOf","NAF","connection","adapter","reconnect","sdpUtils","isSafari","test","navigator","userAgent","randomDelay","min","max","delay","Math","random","debounce","curr","_this","Array","_","untilDataChannelOpen","dataChannel","readyState","resolver","rejector","clear","removeEventListener","addEventListener","isH264VideoSupported","document","createElement","canPlayType","OPUS_PARAMETERS","usedtx","stereo","DEFAULT_PEER_CONNECTION_CONFIG","iceServers","urls","JanusAdapter","instance","Constructor","_classCallCheck","room","clientId","joinToken","serverUrl","webRtcOptions","peerConnectionConfig","ws","reliableTransport","unreliableTransport","initialReconnectionDelay","reconnectionDelay","reconnectionTimeout","maxReconnectionAttempts","reconnectionAttempts","publisher","occupantIds","occupants","mediaStreams","localMediaStream","pendingMediaRequests","Map","pendingOccupants","Set","availableOccupants","requestedOccupants","blockedClients","frozenUpdates","timeOffsets","serverTimeRequests","avgTimeOffset","onWebsocketOpen","bind","onWebsocketClose","onWebsocketMessage","onDataChannelMessage","onData","protoProps","_setLocalMediaStream","_updateTimeOffset","_createSubscriber","_fixSafariIceUFrag","_createPublisher","_addOccupant","_onWebsocketOpen","url","app","roomName","successListener","failureListener","connectSuccess","connectFailure","occupantListener","onOccupantsChanged","openListener","closedListener","messageListener","onOccupantConnected","onOccupantDisconnected","onOccupantMessage","reconnectingListener","reconnectedListener","reconnectionErrorListener","onReconnecting","onReconnected","onReconnectionError","loops","_this2","concat","websocketConnection","WebSocket","wsOnOpen","all","updateTimeOffset","removeAllOccupants","conn","close","delayedReconnectTimeout","_callee","occupantId","_context","createPublisher","initialOccupants","addAvailableOccupant","syncOccupants","event","_this3","code","_this4","disconnect","connect","_this5","parse","idx","splice","has","addOccupant","j","removeOccupant","_callee2","subscriber","_context2","add","createSubscriber","setMediaStream","mediaStream","_x","msg","get","audio","video","_this6","iceConnectionState","log","performDelayedReconnect","offer","createOffer","configurePublisherSdp","fixSafariIceUFrag","local","setLocalDescription","remote","setRemoteDescription","answer","configureSubscriberSdp","createAnswer","_callee3","webrtcup","reliableChannel","unreliableChannel","_this7","_context3","RTCPeerConnection","parseInt","associate","createDataChannel","ordered","maxRetransmits","getTracks","track","addTrack","plugindata","room_id","user_id","removeAvailableOccupant","dispatchEvent","CustomEvent","detail","by","sendJoin","notifications","success","response","users","includes","sdp","replace","line","pt","parameters","parseFmtp","writeFmtp","payloadType","_callee4","_context4","_x2","_callee5","maxRetries","webrtcFailed","_this8","_args5","_context5","leftInterval","setInterval","clearInterval","media","_iOSHackDelayedInitialPeer","MediaStream","getReceivers","receiver","_x3","subscribe","token","frozen","unfreeze","freeze","flushPendingUpdates","networkId","dataType","dataForUpdateMultiMessage","owner","getPendingData","_step","_iterator","_createForOfIteratorHelper","_step$value","source","storeSingleMessage","index","storedMessage","storedData","isOutdatedMessage","lastOwnerTime","isContemporaneousMessage","isFirstSync","set","components","enabled","storeMessage","client","adapters","IS_CONNECTED","NOT_CONNECTED","_callee6","clientSentTime","res","serverReceivedTime","clientReceivedTime","timeOffset","_this9","_context6","isDisconnected","Date","now","fetch","location","href","cache","headers","getTime","precision","reduce","acc","offset","_this10","audioPromise","videoPromise","promise","stream","audioStream","getAudioTracks","videoStream","getVideoTracks","_callee7","existingSenders","newSenders","tracks","_loop","_this11","_context8","getSenders","_context7","find","replaceTrack","toLowerCase","removeTrack","_x4","whom","permsToken","_this12","_this13","register","formatArgs","useColors","namespace","humanize","diff","color","lastC","match","save","namespaces","storage","setItem","removeItem","load","getItem","process","env","DEBUG","window","__nwjs","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","warned","colors","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","Number","ms","coerce","unshift","format","formatter","val","selectColor","extend","init","delimiter","newDebug","toNamespace","regexp","substring","default","stack","disable","names","map","skips","join","enable","split","len","hash","charCodeAt","abs","m","plural","msAbs","isPlural","round","str","exec","parseFloat","isFinite","long","fmtShort","SDPUtils","localCName","generateIdentifier","splitLines","blob","trim","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","parseCandidate","parts","foundation","component","protocol","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","toUpperCase","parseIceOptions","parseRtpMap","parsed","clockRate","channels","numChannels","writeRtpMap","codec","preferredPayloadType","parseExtmap","direction","uri","attributes","writeExtmap","headerExtension","preferredId","kv","params","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","sctpPort","fmt","sctpMapLines","writeSctpDescription","sctp","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}